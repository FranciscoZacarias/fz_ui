
// TODO(fz): Bug: `#endif // UI_GENERATED_H` Still think there is a comment here.

@config
{
  @output_file_name `ui`
  @output_path `../src/`
}

// NOTE(fz): Keep as first generator
@generate @h_file
{
  `#ifndef UI_HEPHAESTUS_H\n#define UI_HEPHAESTUS_H\n\n`
  `/*\n\n@Hephaestus generated code $(@time_now)\n\n*/\n\n`
}

@table
UI_Node_Flags_Table
  (name documentation)
{
  { Mouse_Clickable           `TODO(fz): Add documentation` }
  { Draggable                 `TODO(fz): Add documentation` }
  { Hoverable                 `TODO(fz): Add documentation` }

  { Display_Text              `TODO(fz): Add documentation` }
}
@generate @h_file
{
  `typedef u32 UI_Node_Flags;\n`
  `enum\n{\n`
  @foreach(UI_Node_Flags_Table) `  UI_Node_Flags_$(name) = (1 << $(@index)), /* $(documentation) */\n`
  `};\n\n`
}

@table
UI_Signal_Flags_Table
  (name documentation)
{
  { Left_Down      `TODO(fz): Add documentation` }
  { Middle_Down    `TODO(fz): Add documentation` }
  { Right_Down     `TODO(fz): Add documentation` }
  { Left_Clicked   `TODO(fz): Add documentation` }
  { Middle_Clicked `TODO(fz): Add documentation` }
  { Right_Clicked  `TODO(fz): Add documentation` }
  { Mouse_Hovered  `TODO(fz): Add documentation` }
}
@generate @h_file
{
  `typedef u32 UI_Signal_Flags;\n`
  `enum\n{\n`
  @foreach(UI_Signal_Flags_Table) `  UI_Signal_Flags_$(name) = (1 << $(@index)), /* $(documentation) */\n`
  `};\n\n`
}

@table UI_Alignment_Kind_Table (kind documentation)
{
  { X        `TODO(fz): Add documentation` }
  { Y        `TODO(fz): Add documentation` }
  { Floating `TODO(fz): Add documentation` }
}
@generate @h_file
{
  `typedef enum\n{\n  UI_Alignment_Kind_None = 0,\n`
  @foreach(UI_Alignment_Kind_Table) `  UI_Alignment_Kind_$(kind), /* $(documentation) */ \n`
  `} UI_Alignment_Kind;\n`
  `const char* ui_alignment_kind_table_string[] = { "UI_Alignment_Kind_None",`
  @foreach(UI_Alignment_Kind_Table) ` "UI_Alignment_Kind_$(kind)",`
  ` };\n`
  `#define ui_alignment_kind_not_handled(arena, kind) emit_fatal(Sf(arena, "Unhandled UI_Alignment_Kind kind: %s", ui_alignment_kind_table_string[kind]));\n\n`
}

@table UI_Width_Kind_Table (kind documentation)
{
  { Fill  `TODO(fz): Add documentation` }
  { Fixed `TODO(fz): Add documentation` }
}
@generate @h_file
{
  `typedef enum\n{\n  UI_Width_Kind_None = 0,\n`
  @foreach(UI_Width_Kind_Table) `  UI_Width_Kind_$(kind), /* $(documentation) */ \n`
  `} UI_Width_Kind;\n`
  `const char* ui_width_kind_table_string[] = { "UI_Width_Kind_None",`
  @foreach(UI_Width_Kind_Table) ` "UI_Width_Kind_$(kind)",`
  ` };\n`
  `#define ui_width_kind_not_handled(arena, kind) emit_fatal(Sf(arena, "Unhandled UI_Width_Kind kind: %s", ui_width_kind_table_string[kind]));\n\n`
}

@table UI_Height_Kind_Table (kind documentation)
{
  { Fill  `TODO(fz): Add documentation` }
  { Fixed `TODO(fz): Add documentation` }
}
@generate @h_file
{
  `typedef enum\n{\n  UI_Height_Kind_None = 0,\n`
  @foreach(UI_Height_Kind_Table) `  UI_Height_Kind_$(kind), /* $(documentation) */ \n`
  `} UI_Height_Kind;\n`
  `const char* ui_height_kind_table_string[] = { "UI_Height_Kind_None",`
  @foreach(UI_Height_Kind_Table) ` "UI_Height_Kind_$(kind)",`
  ` };\n`
  `#define ui_height_kind_not_handled(arena, kind) emit_fatal(Sf(arena, "Unhandled UI_Height_Kind kind: %s", ui_height_kind_table_string[kind]));\n\n`
}

@table // Defines stacks for different types
Stack_Table
  (name_upper               name_lower                 type                   default_value                     max debug_bottom_expected)
{
  { Parent                  parent                     UI_Node*               &ui_node_nil_sentinel             32  1 }
  { Top_Left                top_left                   Vec2f32               `vec2f32(0.0f, 0.0f)`              32  0 }
  // TODO(fz): Test
  { Size_X                  size_x                     f32                    g_os_window.dimensions.x          32  0 }
  // TODO(fz): Test
  { Size_Y                  size_y                     f32                    g_os_window.dimensions.y          32  0 }
  { Alignment_Kind          alignment_kind             UI_Alignment_Kind      UI_Alignment_Kind_Y               32  0 }
  // TODO(fz): Test
  { Width_Kind              width_kind                 UI_Width_Kind          UI_Width_Kind_Fill                32  0 }
  // TODO(fz): Test
  { Height_Kind             height_kind                UI_Height_Kind         UI_Height_Kind_Fill               32  0 }
  { Node_Color_Scheme       node_color_scheme          UI_Node_Color_Scheme   ui_context.color_scheme.window    32  0 }
}
@generate @h_file
{
  `// Initializes all stack structures\n`
  `#define UI_Init_Stacks(ctx) \\n`
  @foreach(Stack_Table) `  ctx.$(name_lower)_stack.top_index = 0; ctx.$(name_lower)_stack.bottom_val = $(default_value); \\n`

  `\n`

  `// Creates struct with all UI stacks\n`
  `#define UI_Config_Stacks \\n`
  `  struct \\n`
  `  { \\n`
	@foreach(Stack_Table) `    struct UI_$(name_upper)_stack { $(type) data[$(max)]; u32 top_index; $(type) bottom_val; } $(name_lower)_stack; \\n`
  `  }\n`

  `\n`

  `// Debug: Serves to check if all stacks are at the bottom by the end of the frame\n`
  `#define UI_Debug_Stacks_At_Bottom \\n`
  @foreach(Stack_Table) `  ui_stack_assert_top_at($(name_lower),$(debug_bottom_expected)); \\n`
  `\n`
}
@generate @c_file
{
  // Defines the data structures
  @foreach(Stack_Table) `function void ui_stack_$(name_lower)_init($(type) bot_val) { ui_stack_init($(name_lower), bot_val); }
function void ui_stack_$(name_lower)_push($(type) val) { ui_stack_push($(name_lower), val); }
function $(type) ui_stack_$(name_lower)_pop() { return ui_stack_pop($(name_lower)); }
function $(type) ui_stack_$(name_lower)_top() { return ui_stack_top($(name_lower)); }
function b32  ui_stack_$(name_lower)_is_at_bottom() { return ui_stack_is_at_bottom($(name_lower)); }
function void ui_stack_$(name_lower)_assert_top_at(u32 at) { ui_stack_assert_top_at($(name_lower), at); }
#define ui_$(name_lower)(val) DeferLoop(ui_stack_$(name_lower)_push(val), ui_stack_$(name_lower)_pop())\n\n`
}

// NOTE(fz): Keep as last generator
@generate @h_file
{
  `\n#endif `
  `// UI_HEPHAESTUS_H`
}